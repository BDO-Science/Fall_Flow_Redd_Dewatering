baseGroups = c(
"ESRI (grey canvas)",
"USGS World Imagery (satellite)"
)) %>%
addResetMapButton()
map
map <- leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas, group = "Esri (grey canvas") %>%
addProviderTiles(providers$USGS.USImagery, group = 'USGS World Imagery (satellite)') %>%
setView(lng = -122.3836, lat = 40.5754, zoom = 9) %>%
addCircleMarkers(data = for_map,
lng = ~Longitude,
lat = ~Latitude,
label = ~paste("Latest Depth (in):", measurement_depth),
fillColor = ~pal(measurement_depth),
color = 'black',
weight = 2,# Optional: border color
fillOpacity = 1,
radius = 5,
popup = popupGraph(plots_ordered, width = 625, height = 425),
popupOptions = popupOptions(
autoPan = TRUE
)) %>%
addAwesomeMarkers(data = for_map_flows,
icon = leaf_icons,
lng = ~Longitude,
lat = ~Latitude,
label = ~gauge,
popup = popupGraph(plot_flows, width = 450, height = 350)) %>%
addLegend(
"bottomright",
pal = pal,
values = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
title = "Water Depth (in)",
opacity = 1
) %>%
addMiniMap(
tiles = providers$CartoDB.Positron,
toggleDisplay = TRUE,
position = "bottomleft",
width = 150,
height = 150,
zoomLevelOffset = -4
) %>%
addLayersControl(
baseGroups = c(
"ESRI (grey canvas)",
"USGS World Imagery (satellite)"
)) %>%
addResetMapButton()
map
map <- leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas, group = "Esri (grey canvas") %>%
addProviderTiles(providers$USGS.USImagery, group = 'USGS World Imagery (satellite)') %>%
setView(lng = -122.3836, lat = 40.5754, zoom = 10) %>%
addCircleMarkers(data = for_map,
lng = ~Longitude,
lat = ~Latitude,
label = ~paste("Latest Depth (in):", measurement_depth),
fillColor = ~pal(measurement_depth),
color = 'black',
weight = 2,# Optional: border color
fillOpacity = 1,
radius = 5,
popup = popupGraph(plots_ordered, width = 625, height = 425),
popupOptions = popupOptions(
autoPan = TRUE
)) %>%
addAwesomeMarkers(data = for_map_flows,
icon = leaf_icons,
lng = ~Longitude,
lat = ~Latitude,
label = ~gauge,
popup = popupGraph(plot_flows, width = 450, height = 350)) %>%
addLegend(
"bottomright",
pal = pal,
values = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
title = "Water Depth (in)",
opacity = 1
) %>%
addMiniMap(
tiles = providers$CartoDB.Positron,
toggleDisplay = TRUE,
position = "bottomleft",
width = 150,
height = 150,
zoomLevelOffset = -4
) %>%
addLayersControl(
baseGroups = c(
"ESRI (grey canvas)",
"USGS World Imagery (satellite)"
)) %>%
addResetMapButton()
map
map <- leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas, group = "Esri (grey canvas") %>%
addProviderTiles(providers$USGS.USImagery, group = 'USGS World Imagery (satellite)') %>%
setView(lng = -122.3836, lat = 40.5754, zoom = 11) %>%
addCircleMarkers(data = for_map,
lng = ~Longitude,
lat = ~Latitude,
label = ~paste("Latest Depth (in):", measurement_depth),
fillColor = ~pal(measurement_depth),
color = 'black',
weight = 2,# Optional: border color
fillOpacity = 1,
radius = 5,
popup = popupGraph(plots_ordered, width = 625, height = 425),
popupOptions = popupOptions(
autoPan = TRUE
)) %>%
addAwesomeMarkers(data = for_map_flows,
icon = leaf_icons,
lng = ~Longitude,
lat = ~Latitude,
label = ~gauge,
popup = popupGraph(plot_flows, width = 450, height = 350)) %>%
addLegend(
"bottomright",
pal = pal,
values = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
title = "Water Depth (in)",
opacity = 1
) %>%
addMiniMap(
tiles = providers$CartoDB.Positron,
toggleDisplay = TRUE,
position = "bottomleft",
width = 150,
height = 150,
zoomLevelOffset = -4
) %>%
addLayersControl(
baseGroups = c(
"ESRI (grey canvas)",
"USGS World Imagery (satellite)"
)) %>%
addResetMapButton()
map
plots <- lapply(redd_list, function(df){
last <- df %>% slice(n())
mid <- median(range(df$measurement_date))
plot <- ggplot(df, aes(x = measurement_date, y = measurement_depth,
fill = measurement_depth)) +
#geom_line(linewidth = 1.5, alpha = 0.5) +
geom_point(size = 5, shape = 21) +
scale_fill_gradientn(
colors = rev(viridis(256)),  # Reverse to match reverse = TRUE
limits = c(min_depth, max(redds$measurement_depth, na.rm = TRUE))
) +
#annotate(geom = 'text', x = mid, y = 5, label = text, fontface = 'bold', size = 4) +
scale_y_reverse(limits = c(maxdepth, 0)) +
geom_area(fill = 'steelblue2', alpha = 0.3) +
labs(y = 'Redd Depth (in)', x = 'Date') +
theme_bw() +
theme(legend.position = 'none',
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
plot.margin = margin(.25, .25, .25, .25, "cm"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14))
table <- df %>%
slice(n()) %>%
select(3,'Most Recent Depth (in)' = 12, 'Date Measured' = 13, 'Emergence Date (estimate)' = 5,18,7)
t_grob <- tableGrob(table,  rows = NULL)
t_plot <- ggplot() +
annotation_custom(t_grob) +
theme_void()
final_plot <- t_plot/plot + plot_layout(heights = c(0.5,1.5))
})
plots <- lapply(redd_list, function(df){
last <- df %>% slice(n())
mid <- median(range(df$measurement_date))
plot <- ggplot(df, aes(x = measurement_date, y = measurement_depth,
fill = measurement_depth)) +
#geom_line(linewidth = 1.5, alpha = 0.5) +
geom_point(size = 5, shape = 21) +
scale_fill_viridis_c(
limits = c(min_depth, max(redds$measurement_depth, na.rm = TRUE))
) +
#annotate(geom = 'text', x = mid, y = 5, label = text, fontface = 'bold', size = 4) +
scale_y_reverse(limits = c(maxdepth, 0)) +
geom_area(fill = 'steelblue2', alpha = 0.3) +
labs(y = 'Redd Depth (in)', x = 'Date') +
theme_bw() +
theme(legend.position = 'none',
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
plot.margin = margin(.25, .25, .25, .25, "cm"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14))
table <- df %>%
slice(n()) %>%
select(3,'Most Recent Depth (in)' = 12, 'Date Measured' = 13, 'Emergence Date (estimate)' = 5,18,7)
t_grob <- tableGrob(table,  rows = NULL)
t_plot <- ggplot() +
annotation_custom(t_grob) +
theme_void()
final_plot <- t_plot/plot + plot_layout(heights = c(0.5,1.5))
})
plot_flows <- list(kes_plot, kwk_plot)
for_map <- redds %>% group_by(Redd_ID, lat = Latitude, long = Longitude) %>%
slice(n())
plots_ordered <- plots[as.character(for_map$Redd_ID)]
for_map_flows <- data.frame(gauge = c('KES Gage (Keswick Reservoir Outlfow)', 'KWK Gage(Sacramento River below Keswick)'),
Latitude = c(40.612104, 40.600983),
Longitude = c(-122.445699,-122.444458))
pal <- colorNumeric(
palette = "viridis",
domain = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
reverse = TRUE
)
leaf_icons <- awesomeIcons(
icon = 'tint',
iconColor = 'white',
library = 'fa',
markerColor = 'blue'
)
map <- leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas, group = "Esri (grey canvas") %>%
addProviderTiles(providers$USGS.USImagery, group = 'USGS World Imagery (satellite)') %>%
setView(lng = -122.3836, lat = 40.5754, zoom = 11) %>%
addCircleMarkers(data = for_map,
lng = ~Longitude,
lat = ~Latitude,
label = ~paste("Latest Depth (in):", measurement_depth),
fillColor = ~pal(measurement_depth),
color = 'black',
weight = 2,# Optional: border color
fillOpacity = 1,
radius = 5,
popup = popupGraph(plots_ordered, width = 625, height = 425),
popupOptions = popupOptions(
autoPan = TRUE
)) %>%
addAwesomeMarkers(data = for_map_flows,
icon = leaf_icons,
lng = ~Longitude,
lat = ~Latitude,
label = ~gauge,
popup = popupGraph(plot_flows, width = 450, height = 350)) %>%
addLegend(
"bottomright",
pal = pal,
values = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
title = "Water Depth (in)",
opacity = 1
) %>%
addMiniMap(
tiles = providers$CartoDB.Positron,
toggleDisplay = TRUE,
position = "bottomleft",
width = 150,
height = 150,
zoomLevelOffset = -4
) %>%
addLayersControl(
baseGroups = c(
"ESRI (grey canvas)",
"USGS World Imagery (satellite)"
)) %>%
addResetMapButton()
map
plots <- lapply(redd_list, function(df){
last <- df %>% slice(n())
mid <- median(range(df$measurement_date))
plot <- ggplot(df, aes(x = measurement_date, y = measurement_depth,
fill = measurement_depth)) +
#geom_line(linewidth = 1.5, alpha = 0.5) +
geom_point(size = 5, shape = 21) +
scale_fill_viridis_c(
limits = c(min_depth, max(redds$measurement_depth, na.rm = TRUE)),
direction = -1
) +
#annotate(geom = 'text', x = mid, y = 5, label = text, fontface = 'bold', size = 4) +
scale_y_reverse(limits = c(maxdepth, 0)) +
geom_area(fill = 'steelblue2', alpha = 0.3) +
labs(y = 'Redd Depth (in)', x = 'Date') +
theme_bw() +
theme(legend.position = 'none',
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
plot.margin = margin(.25, .25, .25, .25, "cm"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14))
table <- df %>%
slice(n()) %>%
select(3,'Most Recent Depth (in)' = 12, 'Date Measured' = 13, 'Emergence Date (estimate)' = 5,18,7)
t_grob <- tableGrob(table,  rows = NULL)
t_plot <- ggplot() +
annotation_custom(t_grob) +
theme_void()
final_plot <- t_plot/plot + plot_layout(heights = c(0.5,1.5))
})
plot_flows <- list(kes_plot, kwk_plot)
for_map <- redds %>% group_by(Redd_ID, lat = Latitude, long = Longitude) %>%
slice(n())
plots_ordered <- plots[as.character(for_map$Redd_ID)]
for_map_flows <- data.frame(gauge = c('KES Gage (Keswick Reservoir Outlfow)', 'KWK Gage(Sacramento River below Keswick)'),
Latitude = c(40.612104, 40.600983),
Longitude = c(-122.445699,-122.444458))
pal <- colorNumeric(
palette = "viridis",
domain = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
reverse = TRUE
)
leaf_icons <- awesomeIcons(
icon = 'tint',
iconColor = 'white',
library = 'fa',
markerColor = 'blue'
)
map <- leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas, group = "Esri (grey canvas") %>%
addProviderTiles(providers$USGS.USImagery, group = 'USGS World Imagery (satellite)') %>%
setView(lng = -122.3836, lat = 40.5754, zoom = 11) %>%
addCircleMarkers(data = for_map,
lng = ~Longitude,
lat = ~Latitude,
label = ~paste("Latest Depth (in):", measurement_depth),
fillColor = ~pal(measurement_depth),
color = 'black',
weight = 2,# Optional: border color
fillOpacity = 1,
radius = 5,
popup = popupGraph(plots_ordered, width = 625, height = 425),
popupOptions = popupOptions(
autoPan = TRUE
)) %>%
addAwesomeMarkers(data = for_map_flows,
icon = leaf_icons,
lng = ~Longitude,
lat = ~Latitude,
label = ~gauge,
popup = popupGraph(plot_flows, width = 450, height = 350)) %>%
addLegend(
"bottomright",
pal = pal,
values = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
title = "Water Depth (in)",
opacity = 1
) %>%
addMiniMap(
tiles = providers$CartoDB.Positron,
toggleDisplay = TRUE,
position = "bottomleft",
width = 150,
height = 150,
zoomLevelOffset = -4
) %>%
addLayersControl(
baseGroups = c(
"ESRI (grey canvas)",
"USGS World Imagery (satellite)"
)) %>%
addResetMapButton()
map
htmlwidgets::saveWidget(map, file = 'redd_depth_map.html', selfcontained = TRUE)
map <- leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas, group = "ESRI (grey canvas") %>%
addProviderTiles(providers$Esri.WorldImagery, group = 'ESRI (satellite)') %>%
setView(lng = -122.3836, lat = 40.5754, zoom = 11) %>%
addCircleMarkers(data = for_map,
lng = ~Longitude,
lat = ~Latitude,
label = ~paste("Latest Depth (in):", measurement_depth),
fillColor = ~pal(measurement_depth),
color = 'black',
weight = 2,# Optional: border color
fillOpacity = 1,
radius = 5,
popup = popupGraph(plots_ordered, width = 625, height = 425),
popupOptions = popupOptions(
autoPan = TRUE
)) %>%
addAwesomeMarkers(data = for_map_flows,
icon = leaf_icons,
lng = ~Longitude,
lat = ~Latitude,
label = ~gauge,
popup = popupGraph(plot_flows, width = 450, height = 350)) %>%
addLegend(
"bottomright",
pal = pal,
values = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
title = "Water Depth (in)",
opacity = 1
) %>%
addMiniMap(
tiles = providers$CartoDB.Positron,
toggleDisplay = TRUE,
position = "bottomleft",
width = 150,
height = 150,
zoomLevelOffset = -4
) %>%
addLayersControl(
baseGroups = c(
"ESRI (grey canvas)",
"ESRI (satellite)"
)) %>%
addResetMapButton()
map
htmlwidgets::saveWidget(map, file = 'redd_depth_map.html', selfcontained = TRUE)
map <- leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas, group = "ESRI (grey canvas)") %>%
addProviderTiles(providers$Esri.WorldImagery, group = 'ESRI (satellite)') %>%
setView(lng = -122.3836, lat = 40.5754, zoom = 11) %>%
addCircleMarkers(data = for_map,
lng = ~Longitude,
lat = ~Latitude,
label = ~paste("Latest Depth (in):", measurement_depth),
fillColor = ~pal(measurement_depth),
group = "ESRI (grey canvas)",
color = 'black',
weight = 2,# Optional: border color
fillOpacity = 1,
radius = 5,
popup = popupGraph(plots_ordered, width = 625, height = 425),
popupOptions = popupOptions(
autoPan = TRUE
)) %>%
addAwesomeMarkers(data = for_map_flows,
icon = leaf_icons,
lng = ~Longitude,
lat = ~Latitude,
label = ~gauge,
popup = popupGraph(plot_flows, width = 450, height = 350)) %>%
addLegend(
"bottomright",
pal = pal,
values = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
title = "Water Depth (in)",
opacity = 1
) %>%
addMiniMap(
tiles = providers$CartoDB.Positron,
toggleDisplay = TRUE,
position = "bottomleft",
width = 150,
height = 150,
zoomLevelOffset = -4
) %>%
addLayersControl(
baseGroups = c(
"ESRI (grey canvas)",
"ESRI (satellite)"
)) %>%
addResetMapButton()
map
map <- leaflet() %>%
addProviderTiles(providers$Esri.WorldGrayCanvas, group = "ESRI (grey canvas)") %>%
addProviderTiles(providers$Esri.WorldImagery, group = 'ESRI (satellite)') %>%
setView(lng = -122.3836, lat = 40.5754, zoom = 11) %>%
addCircleMarkers(data = for_map,
lng = ~Longitude,
lat = ~Latitude,
label = ~paste("Latest Depth (in):", measurement_depth),
fillColor = ~pal(measurement_depth),
group = "ESRI (grey canvas)",
color = 'black',
weight = 2,# Optional: border color
fillOpacity = 1,
radius = 5,
popup = popupGraph(plots_ordered, width = 625, height = 425),
popupOptions = popupOptions(
autoPan = TRUE
)) %>%
addCircleMarkers(data = for_map,
lng = ~Longitude,
lat = ~Latitude,
label = ~paste("Latest Depth (in):", measurement_depth),
fillColor = ~pal(measurement_depth),
group = "ESRI (satellite)",
color = 'white',
weight = 2,# Optional: border color
fillOpacity = 1,
radius = 5,
popup = popupGraph(plots_ordered, width = 625, height = 425),
popupOptions = popupOptions(
autoPan = TRUE
)) %>%
addAwesomeMarkers(data = for_map_flows,
icon = leaf_icons,
lng = ~Longitude,
lat = ~Latitude,
label = ~gauge,
popup = popupGraph(plot_flows, width = 450, height = 350)) %>%
addLegend(
"bottomright",
pal = pal,
values = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
title = "Water Depth (in)",
opacity = 1
) %>%
addMiniMap(
tiles = providers$CartoDB.Positron,
toggleDisplay = TRUE,
position = "bottomleft",
width = 150,
height = 150,
zoomLevelOffset = -4
) %>%
addLayersControl(
baseGroups = c(
"ESRI (grey canvas)",
"ESRI (satellite)"
)) %>%
addResetMapButton()
map
