min(Spawn_Flows[date <= edate & date >= date], na.rm = TRUE)
} else {
NA
}
})) %>%
mutate(Boards = if_else(month(date) < 11, 'in', 'out'))
redd_model <- redd_model %>%
mutate(GardSpawn = sapply(redd_model$Spawn_Flows, round_to_nearest, fall_lookup$GardSpawn)) %>%
mutate(GardDewater = sapply(redd_model$Dewater, round_to_nearest, fall_lookup$GardDewater)) %>%
left_join(fall_lookup, by = c('GardDewater', 'GardSpawn', 'Boards')) %>%
mutate(Prop_dewater = if_else(is.na(Prop_dewater), 0, Prop_dewater)) %>%
mutate(TotalDewater = Prop * Prop_dewater)
summary <- redd_model %>% group_by(Scenarios) %>%
summarize(Redds_lost = round((sum(TotalDewater)*100), 1)) %>%
rename('Fall-run dewatered (%)' = 'Redds_lost')
table2 <- setDT(as.data.frame(t(summary)), keep.rownames = TRUE, check.names = TRUE)
names(table2) <- table2 %>% slice(1) %>% unlist()
table2 <- table2 %>%
slice(-1) %>%
rename('Metric' = 1)
# create a table for population expansions
pop_tab <- data.frame(Name = c("Current Count", "Mean Expansion"),
Expansion = c(1,2)
)
pop_tab <- pop_tab %>%
mutate(Redds = round(reddCount*Expansion, 0),
"1%" = Redds*0.01) %>%
rename("Expansion Number" = Expansion,
"Total Redds" = Redds)
knitr::kable(pop_tab,
caption = 'Estimated total number of Winter-run redds and resulting number of redds that represent 1% of the population. Estimated total redds are based on current count and expansion number representing average 2005-2022 expansion.')
library(lubridate)
# Estimated number of redds dewatered
kesFlowReal2 <- kesFlowReal %>% select(date, contains("_cfs"))
kesFlowReal3 <- kesFlowReal2 %>% gather(key = 'Alts', value = 'Flow', -date)
name2 <- colnames(kesFlowReal2)
name2 <- name2[name2 != "date"]
#formatting new redds file for figuring out minimum flows
redds2 <- subset(redds, redds$Status == "OK" | redds$Status == "DEWATERED")
for (col in name2) { #adding alternative names to redd dataframe
redds2[[col]] <- NA
}
redds2 <- redds2 %>% gather(key = 'Alts', value = 'Flow', -1:-4) %>%
select(-Flow)
flowList <- list()
for(i in 1:nrow(redds2)){
filtered <- kesFlowReal3 %>% filter(Alts == redds2$Alts[i]) %>%
filter(date >= redds2$Born.on.Date[i] & date <= redds2$Estimated.Date.of.Emergence[i])
minflow <- min(filtered$Flow)
flowList[[i]] <- minflow
}
test2 <- cbind(flowList)
dewater <- cbind(redds2, test2)
dewater <- dewater %>% mutate(Dewater = if_else(flowList <= ACTUAL.or.ESTIMATED..DEWATER.FLOW, 1, 0)) %>%
mutate(Dewater_Buffer = ACTUAL.or.ESTIMATED..DEWATER.FLOW + 250) %>%
mutate(Dewatered_Buffer = if_else(flowList <= Dewater_Buffer, 1, 0)) %>%
gather(key = 'Type', value = 'Dewater', 7,9) %>%
mutate(Buffer = if_else(grepl('Buffer', Type), 'YES', 'NO')) %>%
select(5,9,10) %>%
mutate(key = row_number())
dewater <- dewater %>% spread(key = 'Alts', value = 'Dewater')
#do any EOS fall below 2200 TAF?
EOS <- 2717
eosList <- list()
eosList <- eosList %>% append(
list(total_volume_as = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000)),
after = length(eosList)
)
eos_aug90 <- eosList$total_volume_as["aug90_cfs"]
eosList <- eosList %>% append(
list(Difference_from_aug90 = (eos_aug90 - colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000)),
after = length(eosList)
)
eosList <- eosList %>% append(
list(Resulting_EOS = (EOS - (eos_aug90 - colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000))),
after = length(eosList)
)
if(min(eosList$Resulting_EOS) > 2200){
TDM <- "All proposed scenarios are anticipated to have EOS storage greater than the 2200 TAF threshold and therefore would not be expected to contribute to TDM impacts to winter-run chinook salmon in the subsequent year"
} else {
TDM <- "One or more proposed scenarios are anticipated to have EOS storage below the 2200 TAF threshold and therefore would be expected to contribute to TDM in the subsequent year, though scenarios above the threshold are not expected to contribute to TDM impacts to winter-run chinook salmon in the subsequent year"
}
#automating expansion row names for table
exp <- vector()
pop_temp <- pop_tab %>% rename('Expansion' = 'Expansion Number') %>% filter(Expansion > 1, !grepl('Expected', Name))
for(i in 1:nrow(pop_temp)){
temp <- pop_temp[i,'Expansion']
temp <- paste0('Winter-run Percent Lost (expansion of ', temp,')')
exp[i] <- temp
}
#creating row names for table
Metric <- c("Avg Sept Flow (cfs)", "Avg Oct Flow (cfs)", "Sept-Feb Total Volume (TAF)", "Aug-Sept Total Volume (TAF)", "Anticipated EOS Storage (TAF)", "Winter-run Redds Dewatered", "Winter-run Percent Lost (current count)", "Winter-run Percent Lost (mean expansion of 2)", "Winter-run Redds Dewatered (250 cfs buffer)", "Winter-run Percent Lost (250 cfs buffer)")
#creating the table using the row names
table <- data.frame(Metric)
#creating a list to store all summary statistics below
tableList <- list()
#summary statistics for flow which are stored in tableList
tableList <- append(tableList, list(avg_sept_flow = colMeans(septKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- append(tableList, list(avg_oct_flow = colMeans(octKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- tableList %>% append(
list(total_volume_sf = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-09-01') & date < paste0(yr+1,'-03-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(total_volume_as = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(Resulting_EOS = (EOS - (eos_aug90 - colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000))),
after = length(tableList)
)
#summary statistics for redd dewatering
tableList <- tableList %>% append(
list(wr_dewatered = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#summary statistics for redd dewatering with expansion factors
tableList <- tableList %>% append(
list(wr_pct_lost_300 = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/(reddCount*2))*100),
after = length(tableList)
)
#summary statsitics for redd dewatering with flow buffer
tableList <- tableList %>% append(
list(wr_dewatered_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#binding summary statistics into one table
temp_table <- bind_rows(tableList)
#binding to original table with row names
table <- bind_cols(Metric, temp_table) %>% rename('Metric' = 1)
#adding fall-run dewatering to table
table <- rbind(table, setNames(table2, names(table))) %>%
mutate_at(c(2:ncol(table)), as.numeric)
# Separate the data into two parts: the first 5 rows and the remaining rows
table[,2:ncol(table)] <- round(table[,2:ncol(table)], 2)
# Print the modified table
colnames(table) <- gsub("_cfs$", "", colnames(table))
knitr::kable(table,
caption = paste0('Average September and October Keswick (KES) Flow in cfs, total water volume of each alternative for August through September and September through February in TAF, anticipated End of Septemeber storage based on August 90% exceedence forecast in TAF, estimated numbers of SRWC redds dewatered, and percent of population that would be lost under each of the proposed alternatives. KES Flow data uses actual flow-to-date as of ',format(max(allflows$Date), '%B %d, %Y'),' and proposed flows for the remainder of the incubation period. Redd dewatering is considered at the actual or estimated dewatering flow and with a 250 cfs buffer applied to the actual/estimated dewatering flow. Percentage of the population lost is based on the ',countDate,' count of ',reddCount,' Winter-run redds and updated redd counts may be available soon. See Scenario Descriptions file for additional information on each scenario.'))%>%
column_spec(1, width = "4cm") %>%
lapply(2:n_columns, function(i) column_spec(table, i, width = "5cm"))
n_columns <- ncol(table)
#automating expansion row names for table
exp <- vector()
pop_temp <- pop_tab %>% rename('Expansion' = 'Expansion Number') %>% filter(Expansion > 1, !grepl('Expected', Name))
for(i in 1:nrow(pop_temp)){
temp <- pop_temp[i,'Expansion']
temp <- paste0('Winter-run Percent Lost (expansion of ', temp,')')
exp[i] <- temp
}
#creating row names for table
Metric <- c("Avg Sept Flow (cfs)", "Avg Oct Flow (cfs)", "Sept-Feb Total Volume (TAF)", "Aug-Sept Total Volume (TAF)", "Anticipated EOS Storage (TAF)", "Winter-run Redds Dewatered", "Winter-run Percent Lost (current count)", "Winter-run Percent Lost (mean expansion of 2)", "Winter-run Redds Dewatered (250 cfs buffer)", "Winter-run Percent Lost (250 cfs buffer)")
#creating the table using the row names
table <- data.frame(Metric)
#creating a list to store all summary statistics below
tableList <- list()
#summary statistics for flow which are stored in tableList
tableList <- append(tableList, list(avg_sept_flow = colMeans(septKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- append(tableList, list(avg_oct_flow = colMeans(octKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- tableList %>% append(
list(total_volume_sf = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-09-01') & date < paste0(yr+1,'-03-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(total_volume_as = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(Resulting_EOS = (EOS - (eos_aug90 - colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000))),
after = length(tableList)
)
#summary statistics for redd dewatering
tableList <- tableList %>% append(
list(wr_dewatered = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#summary statistics for redd dewatering with expansion factors
tableList <- tableList %>% append(
list(wr_pct_lost_300 = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/(reddCount*2))*100),
after = length(tableList)
)
#summary statsitics for redd dewatering with flow buffer
tableList <- tableList %>% append(
list(wr_dewatered_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#binding summary statistics into one table
temp_table <- bind_rows(tableList)
#binding to original table with row names
table <- bind_cols(Metric, temp_table) %>% rename('Metric' = 1)
#adding fall-run dewatering to table
table <- rbind(table, setNames(table2, names(table))) %>%
mutate_at(c(2:ncol(table)), as.numeric)
# Separate the data into two parts: the first 5 rows and the remaining rows
table[,2:ncol(table)] <- round(table[,2:ncol(table)], 2)
# Print the modified table
colnames(table) <- gsub("_cfs$", "", colnames(table))
n_columns <- ncol(table)
knitr::kable(table,
caption = paste0('Average September and October Keswick (KES) Flow in cfs, total water volume of each alternative for August through September and September through February in TAF, anticipated End of Septemeber storage based on August 90% exceedence forecast in TAF, estimated numbers of SRWC redds dewatered, and percent of population that would be lost under each of the proposed alternatives. KES Flow data uses actual flow-to-date as of ',format(max(allflows$Date), '%B %d, %Y'),' and proposed flows for the remainder of the incubation period. Redd dewatering is considered at the actual or estimated dewatering flow and with a 250 cfs buffer applied to the actual/estimated dewatering flow. Percentage of the population lost is based on the ',countDate,' count of ',reddCount,' Winter-run redds and updated redd counts may be available soon. See Scenario Descriptions file for additional information on each scenario.'))%>%
column_spec(1, width = "4cm") %>%
lapply(2:n_columns, function(i) column_spec(table, i, width = "5cm"))
#automating expansion row names for table
exp <- vector()
pop_temp <- pop_tab %>% rename('Expansion' = 'Expansion Number') %>% filter(Expansion > 1, !grepl('Expected', Name))
for(i in 1:nrow(pop_temp)){
temp <- pop_temp[i,'Expansion']
temp <- paste0('Winter-run Percent Lost (expansion of ', temp,')')
exp[i] <- temp
}
#creating row names for table
Metric <- c("Avg Sept Flow (cfs)", "Avg Oct Flow (cfs)", "Sept-Feb Total Volume (TAF)", "Aug-Sept Total Volume (TAF)", "Anticipated EOS Storage (TAF)", "Winter-run Redds Dewatered", "Winter-run Percent Lost (current count)", "Winter-run Percent Lost (mean expansion of 2)", "Winter-run Redds Dewatered (250 cfs buffer)", "Winter-run Percent Lost (250 cfs buffer)")
#creating the table using the row names
table <- data.frame(Metric)
#creating a list to store all summary statistics below
tableList <- list()
#summary statistics for flow which are stored in tableList
tableList <- append(tableList, list(avg_sept_flow = colMeans(septKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- append(tableList, list(avg_oct_flow = colMeans(octKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- tableList %>% append(
list(total_volume_sf = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-09-01') & date < paste0(yr+1,'-03-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(total_volume_as = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(Resulting_EOS = (EOS - (eos_aug90 - colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000))),
after = length(tableList)
)
#summary statistics for redd dewatering
tableList <- tableList %>% append(
list(wr_dewatered = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#summary statistics for redd dewatering with expansion factors
tableList <- tableList %>% append(
list(wr_pct_lost_300 = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/(reddCount*2))*100),
after = length(tableList)
)
#summary statsitics for redd dewatering with flow buffer
tableList <- tableList %>% append(
list(wr_dewatered_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#binding summary statistics into one table
temp_table <- bind_rows(tableList)
#binding to original table with row names
table <- bind_cols(Metric, temp_table) %>% rename('Metric' = 1)
#adding fall-run dewatering to table
table <- rbind(table, setNames(table2, names(table))) %>%
mutate_at(c(2:ncol(table)), as.numeric)
# Separate the data into two parts: the first 5 rows and the remaining rows
table[,2:ncol(table)] <- round(table[,2:ncol(table)], 2)
# Print the modified table
colnames(table) <- gsub("_cfs$", "", colnames(table))
n_columns <- ncol(table)
knitr::kable(table,
caption = paste0('Average September and October Keswick (KES) Flow in cfs, total water volume of each alternative for August through September and September through February in TAF, anticipated End of Septemeber storage based on August 90% exceedence forecast in TAF, estimated numbers of SRWC redds dewatered, and percent of population that would be lost under each of the proposed alternatives. KES Flow data uses actual flow-to-date as of ',format(max(allflows$Date), '%B %d, %Y'),' and proposed flows for the remainder of the incubation period. Redd dewatering is considered at the actual or estimated dewatering flow and with a 250 cfs buffer applied to the actual/estimated dewatering flow. Percentage of the population lost is based on the ',countDate,' count of ',reddCount,' Winter-run redds and updated redd counts may be available soon. See Scenario Descriptions file for additional information on each scenario.'))%>%
column_spec(1, width = "4cm") %>%
column_spec(2:ncol(table), width = "5cm")
#automating expansion row names for table
exp <- vector()
pop_temp <- pop_tab %>% rename('Expansion' = 'Expansion Number') %>% filter(Expansion > 1, !grepl('Expected', Name))
for(i in 1:nrow(pop_temp)){
temp <- pop_temp[i,'Expansion']
temp <- paste0('Winter-run Percent Lost (expansion of ', temp,')')
exp[i] <- temp
}
#creating row names for table
Metric <- c("Avg Sept Flow (cfs)", "Avg Oct Flow (cfs)", "Sept-Feb Total Volume (TAF)", "Aug-Sept Total Volume (TAF)", "Anticipated EOS Storage (TAF)", "Winter-run Redds Dewatered", "Winter-run Percent Lost (current count)", "Winter-run Percent Lost (mean expansion of 2)", "Winter-run Redds Dewatered (250 cfs buffer)", "Winter-run Percent Lost (250 cfs buffer)")
#creating the table using the row names
table <- data.frame(Metric)
#creating a list to store all summary statistics below
tableList <- list()
#summary statistics for flow which are stored in tableList
tableList <- append(tableList, list(avg_sept_flow = colMeans(septKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- append(tableList, list(avg_oct_flow = colMeans(octKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- tableList %>% append(
list(total_volume_sf = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-09-01') & date < paste0(yr+1,'-03-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(total_volume_as = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(Resulting_EOS = (EOS - (eos_aug90 - colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000))),
after = length(tableList)
)
#summary statistics for redd dewatering
tableList <- tableList %>% append(
list(wr_dewatered = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#summary statistics for redd dewatering with expansion factors
tableList <- tableList %>% append(
list(wr_pct_lost_300 = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/(reddCount*2))*100),
after = length(tableList)
)
#summary statsitics for redd dewatering with flow buffer
tableList <- tableList %>% append(
list(wr_dewatered_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#binding summary statistics into one table
temp_table <- bind_rows(tableList)
#binding to original table with row names
table <- bind_cols(Metric, temp_table) %>% rename('Metric' = 1)
#adding fall-run dewatering to table
table <- rbind(table, setNames(table2, names(table))) %>%
mutate_at(c(2:ncol(table)), as.numeric)
# Separate the data into two parts: the first 5 rows and the remaining rows
table[,2:ncol(table)] <- round(table[,2:ncol(table)], 2)
# Print the modified table
colnames(table) <- gsub("_cfs$", "", colnames(table))
n_columns <- ncol(table)
knitr::kable(table,
caption = paste0('Average September and October Keswick (KES) Flow in cfs, total water volume of each alternative for August through September and September through February in TAF, anticipated End of Septemeber storage based on August 90% exceedence forecast in TAF, estimated numbers of SRWC redds dewatered, and percent of population that would be lost under each of the proposed alternatives. KES Flow data uses actual flow-to-date as of ',format(max(allflows$Date), '%B %d, %Y'),' and proposed flows for the remainder of the incubation period. Redd dewatering is considered at the actual or estimated dewatering flow and with a 250 cfs buffer applied to the actual/estimated dewatering flow. Percentage of the population lost is based on the ',countDate,' count of ',reddCount,' Winter-run redds and updated redd counts may be available soon. See Scenario Descriptions file for additional information on each scenario.'))%>%
column_spec(1, width = "4cm") %>%
column_spec(2:n_columns, width = "5cm")
kable_output <- kable(table,
caption = paste0('Average September and October Keswick (KES) Flow in cfs, total water volume of each alternative for August through September and September through February in TAF, anticipated End of Septemeber storage based on August 90% exceedence forecast in TAF, estimated numbers of SRWC redds dewatered, and percent of population that would be lost under each of the proposed alternatives. KES Flow data uses actual flow-to-date as of ',format(max(allflows$Date), '%B %d, %Y'),' and proposed flows for the remainder of the incubation period. Redd dewatering is considered at the actual or estimated dewatering flow and with a 250 cfs buffer applied to the actual/estimated dewatering flow. Percentage of the population lost is based on the ',countDate,' count of ',reddCount,' Winter-run redds and updated redd counts may be available soon. See Scenario Descriptions file for additional information on each scenario.'))%>%
column_spec(1, width = "4cm") %>%
column_spec(2:n_columns, width = "5cm")
knitr::kable_output
kable_output <- kable(table,
caption = paste0('Average September and October Keswick (KES) Flow in cfs, total water volume of each alternative for August through September and September through February in TAF, anticipated End of Septemeber storage based on August 90% exceedence forecast in TAF, estimated numbers of SRWC redds dewatered, and percent of population that would be lost under each of the proposed alternatives. KES Flow data uses actual flow-to-date as of ',format(max(allflows$Date), '%B %d, %Y'),' and proposed flows for the remainder of the incubation period. Redd dewatering is considered at the actual or estimated dewatering flow and with a 250 cfs buffer applied to the actual/estimated dewatering flow. Percentage of the population lost is based on the ',countDate,' count of ',reddCount,' Winter-run redds and updated redd counts may be available soon. See Scenario Descriptions file for additional information on each scenario.'))%>%
column_spec(1, width = "4cm") %>%
column_spec(2:n_columns, width = "5cm")
kable_output <- kable(table,
caption = paste0('Average September and October Keswick (KES) Flow in cfs, total water volume of each alternative for August through September and September through February in TAF, anticipated End of Septemeber storage based on August 90% exceedence forecast in TAF, estimated numbers of SRWC redds dewatered, and percent of population that would be lost under each of the proposed alternatives. KES Flow data uses actual flow-to-date as of ',format(max(allflows$Date), '%B %d, %Y'),' and proposed flows for the remainder of the incubation period. Redd dewatering is considered at the actual or estimated dewatering flow and with a 250 cfs buffer applied to the actual/estimated dewatering flow. Percentage of the population lost is based on the ',countDate,' count of ',reddCount,' Winter-run redds and updated redd counts may be available soon. See Scenario Descriptions file for additional information on each scenario.'))%>%
column_spec(1, width = "4cm") %>%
column_spec(2:n_columns, width = "5cm")
kable_output
kable_output <- kable(table,
caption = paste0('Average September and October Keswick (KES) Flow in cfs, total water volume of each alternative for August through September and September through February in TAF, anticipated End of Septemeber storage based on August 90% exceedence forecast in TAF, estimated numbers of SRWC redds dewatered, and percent of population that would be lost under each of the proposed alternatives. KES Flow data uses actual flow-to-date as of ',format(max(allflows$Date), '%B %d, %Y'),' and proposed flows for the remainder of the incubation period. Redd dewatering is considered at the actual or estimated dewatering flow and with a 250 cfs buffer applied to the actual/estimated dewatering flow. Percentage of the population lost is based on the ',countDate,' count of ',reddCount,' Winter-run redds and updated redd counts may be available soon. See Scenario Descriptions file for additional information on each scenario.'))%>%
column_spec(1, width = "4cm") %>%
column_spec(2:n_columns, width = "5cm")
for(i in 2:ncol(table)) {
kable_output <- kable_output %>% column_spec(i, width = "5cm")
}
kable_output
#automating expansion row names for table
exp <- vector()
pop_temp <- pop_tab %>% rename('Expansion' = 'Expansion Number') %>% filter(Expansion > 1, !grepl('Expected', Name))
for(i in 1:nrow(pop_temp)){
temp <- pop_temp[i,'Expansion']
temp <- paste0('Winter-run Percent Lost (expansion of ', temp,')')
exp[i] <- temp
}
#creating row names for table
Metric <- c("Avg Sept Flow (cfs)", "Avg Oct Flow (cfs)", "Sept-Feb Total Volume (TAF)", "Aug-Sept Total Volume (TAF)", "Anticipated EOS Storage (TAF)", "Winter-run Redds Dewatered", "Winter-run Percent Lost (current count)", "Winter-run Percent Lost (mean expansion of 2)", "Winter-run Redds Dewatered (250 cfs buffer)", "Winter-run Percent Lost (250 cfs buffer)")
#creating the table using the row names
table <- data.frame(Metric)
#creating a list to store all summary statistics below
tableList <- list()
#summary statistics for flow which are stored in tableList
tableList <- append(tableList, list(avg_sept_flow = colMeans(septKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- append(tableList, list(avg_oct_flow = colMeans(octKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- tableList %>% append(
list(total_volume_sf = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-09-01') & date < paste0(yr+1,'-03-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(total_volume_as = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(Resulting_EOS = (EOS - (eos_aug90 - colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000))),
after = length(tableList)
)
#summary statistics for redd dewatering
tableList <- tableList %>% append(
list(wr_dewatered = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#summary statistics for redd dewatering with expansion factors
tableList <- tableList %>% append(
list(wr_pct_lost_300 = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/(reddCount*2))*100),
after = length(tableList)
)
#summary statsitics for redd dewatering with flow buffer
tableList <- tableList %>% append(
list(wr_dewatered_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#binding summary statistics into one table
temp_table <- bind_rows(tableList)
#binding to original table with row names
table <- bind_cols(Metric, temp_table) %>% rename('Metric' = 1)
#adding fall-run dewatering to table
table <- rbind(table, setNames(table2, names(table))) %>%
mutate_at(c(2:ncol(table)), as.numeric)
# Separate the data into two parts: the first 5 rows and the remaining rows
table[,2:ncol(table)] <- round(table[,2:ncol(table)], 2)
# Print the modified table
colnames(table) <- gsub("_cfs$", "", colnames(table))
kable_output <- kable(table,
caption = paste0('Average September and October Keswick (KES) Flow in cfs, total water volume of each alternative for August through September and September through February in TAF, anticipated End of Septemeber storage based on August 90% exceedence forecast in TAF, estimated numbers of SRWC redds dewatered, and percent of population that would be lost under each of the proposed alternatives. KES Flow data uses actual flow-to-date as of ',format(max(allflows$Date), '%B %d, %Y'),' and proposed flows for the remainder of the incubation period. Redd dewatering is considered at the actual or estimated dewatering flow and with a 250 cfs buffer applied to the actual/estimated dewatering flow. Percentage of the population lost is based on the ',countDate,' count of ',reddCount,' Winter-run redds and updated redd counts may be available soon. See Scenario Descriptions file for additional information on each scenario.'))%>%
column_spec(1, width = "4cm")
for(i in 2:ncol(table)) {
kable_output <- kable_output %>% column_spec(i, width = "5cm")
}
knitr::kable_output
#automating expansion row names for table
exp <- vector()
pop_temp <- pop_tab %>% rename('Expansion' = 'Expansion Number') %>% filter(Expansion > 1, !grepl('Expected', Name))
for(i in 1:nrow(pop_temp)){
temp <- pop_temp[i,'Expansion']
temp <- paste0('Winter-run Percent Lost (expansion of ', temp,')')
exp[i] <- temp
}
#creating row names for table
Metric <- c("Avg Sept Flow (cfs)", "Avg Oct Flow (cfs)", "Sept-Feb Total Volume (TAF)", "Aug-Sept Total Volume (TAF)", "Anticipated EOS Storage (TAF)", "Winter-run Redds Dewatered", "Winter-run Percent Lost (current count)", "Winter-run Percent Lost (mean expansion of 2)", "Winter-run Redds Dewatered (250 cfs buffer)", "Winter-run Percent Lost (250 cfs buffer)")
#creating the table using the row names
table <- data.frame(Metric)
#creating a list to store all summary statistics below
tableList <- list()
#summary statistics for flow which are stored in tableList
tableList <- append(tableList, list(avg_sept_flow = colMeans(septKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- append(tableList, list(avg_oct_flow = colMeans(octKesFlow[,-1], na.rm = TRUE)), after = length(tableList))
tableList <- tableList %>% append(
list(total_volume_sf = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-09-01') & date < paste0(yr+1,'-03-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(total_volume_as = (colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000)),
after = length(tableList)
)
tableList <- tableList %>% append(
list(Resulting_EOS = (EOS - (eos_aug90 - colSums(filter(kesFlowReal2, date >= paste0(yr,'-08-01') & date < paste0(yr,'-10-01'))[, -1])*1.983/1000))),
after = length(tableList)
)
#summary statistics for redd dewatering
tableList <- tableList %>% append(
list(wr_dewatered = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#summary statistics for redd dewatering with expansion factors
tableList <- tableList %>% append(
list(wr_pct_lost_300 = (colSums(filter(dewater, Buffer == 'NO')[, -1:-2], na.rm = TRUE)/(reddCount*2))*100),
after = length(tableList)
)
#summary statsitics for redd dewatering with flow buffer
tableList <- tableList %>% append(
list(wr_dewatered_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE))),
after = length(tableList)
)
tableList <- tableList %>% append(
list(wr_pct_lost_250 = (colSums(filter(dewater, Buffer == 'YES')[, -1:-2], na.rm = TRUE)/reddCount)*100),
after = length(tableList)
)
#binding summary statistics into one table
temp_table <- bind_rows(tableList)
#binding to original table with row names
table <- bind_cols(Metric, temp_table) %>% rename('Metric' = 1)
#adding fall-run dewatering to table
table <- rbind(table, setNames(table2, names(table))) %>%
mutate_at(c(2:ncol(table)), as.numeric)
# Separate the data into two parts: the first 5 rows and the remaining rows
table[,2:ncol(table)] <- round(table[,2:ncol(table)], 2)
# Print the modified table
colnames(table) <- gsub("_cfs$", "", colnames(table))
knitr::kable(table,
caption = paste0('Average September and October Keswick (KES) Flow in cfs, total water volume of each alternative for August through September and September through February in TAF, anticipated End of Septemeber storage based on August 90% exceedence forecast in TAF, estimated numbers of SRWC redds dewatered, and percent of population that would be lost under each of the proposed alternatives. KES Flow data uses actual flow-to-date as of ',format(max(allflows$Date), '%B %d, %Y'),' and proposed flows for the remainder of the incubation period. Redd dewatering is considered at the actual or estimated dewatering flow and with a 250 cfs buffer applied to the actual/estimated dewatering flow. Percentage of the population lost is based on the ',countDate,' count of ',reddCount,' Winter-run redds and updated redd counts may be available soon. See Scenario Descriptions file for additional information on each scenario.')) %>%
kable_styling(font_size = 7)
