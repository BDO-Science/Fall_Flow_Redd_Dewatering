ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_viridis_d() +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(todays_date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 400, size = 3.5,
fontface = 'italic', label = 'Actual Flows') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 9350, size = 3, label = 'KWK') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 7750, size = 3, label = 'KES')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
scale_linetype_discrete(guide = "none") +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count)) +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_viridis_d()
#annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(todays_date),
#ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
#annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 400, size = 3.5,
#fontface = 'italic', label = 'Actual Flows') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 9350, size = 3, label = 'KWK') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 7750, size = 3, label = 'KES')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
scale_linetype_discrete(guide = "none") +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'white') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_viridis_d()
#annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(todays_date),
#ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
#annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 400, size = 3.5,
#fontface = 'italic', label = 'Actual Flows') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 9350, size = 3, label = 'KWK') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 7750, size = 3, label = 'KES')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
scale_linetype_discrete(guide = "none") +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'white') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange'))
#annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(todays_date),
#ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
#annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 400, size = 3.5,
#fontface = 'italic', label = 'Actual Flows') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 9350, size = 3, label = 'KWK') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 7750, size = 3, label = 'KES')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
scale_linetype_discrete(guide = "none") +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 12),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange'))
#annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(todays_date),
#ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
#annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 400, size = 3.5,
#fontface = 'italic', label = 'Actual Flows') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 9350, size = 3, label = 'KWK') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 7750, size = 3, label = 'KES')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
scale_linetype_discrete(guide = "none") +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange'))
#annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(todays_date),
#ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
#annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 400, size = 3.5,
#fontface = 'italic', label = 'Actual Flows') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 9350, size = 3, label = 'KWK') +
#annotate(geom = 'text', x = as.Date('2023-09-03'), y = 7750, size = 3, label = 'KES')
redd_graph
library(tidyverse)
library(janitor)
library(here)
library(readxl)
library(CDECRetrieve)
project <- here::here() #pointing to working directory
#user defined values
wy <- 2025
exp_fac <- 2
yr <- year(Sys.Date())
kwk <- cdec_query('KWK', '41', 'D', paste0(wy-1,'-08-01'), Sys.Date())
kes <- cdec_query('KES', '23', 'D', paste0(wy-1,'-08-01'), Sys.Date())
kwk <- cdec_query('KWK', '41', 'D', paste0(wy-1,'-08-01'), Sys.Date())
kes <- cdec_query('KES', '23', 'D', paste0(wy-1,'-08-01'), Sys.Date())
rt_flows <- bind_rows(kwk,kes) %>%
select(date = 3, location = 2, flow = 5) %>%
mutate(date = ymd(date)) %>%
filter(date >= as.Date('2025-08-01'))
kes_flow_bind <- rt_flows %>%
filter(location == 'KES') %>%
select(-2) %>%
crossing(scenarios = scen_filter) %>%
select(Date = 1,3,2)
rt_flows <- bind_rows(kwk,kes) %>%
select(date = 3, location = 2, flow = 5) %>%
mutate(date = ymd(date)) %>%
filter(date >= as.Date('2025-08-01'))
rt_flows <- bind_rows(kwk,kes) %>%
select(date = 3, location = 2, flow = 5) %>%
mutate(date = ymd(date))
View(rt_flows)
kwk_url <- paste0("https://www.cbr.washington.edu/sacramento/data/php/rpt/mg.php?sc=1&mgconfig=river&outputFormat=csv&hafilter=All&year%5B%5D='
,wy,'&loc%5B%5D=KWK&data%5B%5D=Flow&tempUnit=F&startdate=1%2F1&enddate=12%2F31&avgyear=0&consolidate=1&grid=1&y1min=&y1max=&y2min=&y2max=&size=large")
kes_url <- paste0("https://www.cbr.washington.edu/sacramento/data/php/rpt/mg.php?sc=1&mgconfig=river&outputFormat=csv&hafilter=All&year%5B%5D='
,wy,'&loc%5B%5D=KES&data%5B%5D=ReservoirOutflow&tempUnit=F&startdate=1%2F1&enddate=12%2F31&avgyear=0&consolidate=1&grid=1&y1min=&y1max=&y2min=&y2max=&size=large")
kwk <- read_csv(kwk_url) %>% clean_names()
View(kwk)
kwk_url <- paste0("https://www.cbr.washington.edu/sacramento/data/php/rpt/mg.php?sc=1&mgconfig=river&outputFormat=csv&hafilter=All&year%5B%5D="
,wy,"&loc%5B%5D=KWK&data%5B%5D=Flow&tempUnit=F&startdate=1%2F1&enddate=12%2F31&avgyear=0&consolidate=1&grid=1&y1min=&y1max=&y2min=&y2max=&size=large")
kes_url <- paste0("https://www.cbr.washington.edu/sacramento/data/php/rpt/mg.php?sc=1&mgconfig=river&outputFormat=csv&hafilter=All&year%5B%5D="
,wy,"&loc%5B%5D=KES&data%5B%5D=ReservoirOutflow&tempUnit=F&startdate=1%2F1&enddate=12%2F31&avgyear=0&consolidate=1&grid=1&y1min=&y1max=&y2min=&y2max=&size=large")
kwk <- read_csv(kwk_url) %>% clean_names()
View(kwk)
kes <- read_csv(kes_url) %>% clean_names() %>%
mutate(location = 'KES')
kwk <- read_csv(kwk_url) %>% clean_names() %>%
mutate(location = 'KWK')
kwk <- read_csv(kwk_url) %>% clean_names() %>%
mutate(location = 'KWK') %>%
select(1, 3,flow = 2,)
kes <- read_csv(kes_url) %>% clean_names() %>%
mutate(location = 'KES') %>%
select(1, 3,flow = 2,)
rt_flows <- bind_rows(kwk,kes)
View(rt_flows)
kwk <- read_csv(kwk_url) %>% clean_names() %>%
mutate(location = 'KWK') %>%
select(date = 1, 3,flow = 2,)
kes <- read_csv(kes_url) %>% clean_names() %>%
mutate(location = 'KES') %>%
select(date = 1, 3,flow = 2,)
rt_flows <- bind_rows(kwk,kes) %>%
mutate(date = mdy(paste0(date,wy)))
rt_flows <- bind_rows(kwk,kes)
rt_flows <- bind_rows(kwk,kes) %>%
mutate(date = mdy(paste0(date,'/',wy)))
rt_flows <- bind_rows(kwk,kes) %>%
mutate(date = mdy(paste0(date,'/',wy))) %>%
filter(!is.na(date)) %>%
filter(date >= as.Date('2025-08-01'))
rt_flows <- bind_rows(kwk,kes) %>%
mutate(date = mdy(paste0(date,'/',wy))) %>%
filter(!is.na(date))
rt_flows <- bind_rows(kwk,kes) %>%
mutate(date = mdy(paste0(date,'/',wy))) %>%
filter(!is.na(date)) %>%
filter(date <= Sys.Date()) %>%
filter(date >= as.Date('2025-08-01'))
project <- here::here() #pointing to working directory
library(leaflet)
library(leafpop)
library(readxl)
library(tidyverse)
library(gridExtra)
library(patchwork)
library(leaflet.extras2)
project <- here::here() #pointing to working directory
files <- list.files(here::here(project, 'input_data/shallow_redds/'), pattern = "\\.xlsx$", full.names = TRUE)
maxFile <- max(files)
redds <- read_excel(maxFile, sheet = 'SacPAS Shallow Redds') %>%
mutate(Run = case_when(grepl('W', Redd_ID) ~ 'Winter',
grepl('F', Redd_ID) ~ 'Fall',
grepl('S', Redd_ID) ~ 'Spring')) %>%
mutate(Latitude = as.numeric(Latitude),
Longitude = as.numeric(Longitude),
measurement_date = ymd(measurement_date))
View(redds)
kwk_url <- paste0("https://www.cbr.washington.edu/sacramento/data/php/rpt/mg.php?sc=1&mgconfig=river&outputFormat=csv&hafilter=All&year%5B%5D="
,wy,"&loc%5B%5D=KWK&data%5B%5D=Flow&tempUnit=F&startdate=1%2F1&enddate=12%2F31&avgyear=0&consolidate=1&grid=1&y1min=&y1max=&y2min=&y2max=&size=large")
kes_url <- paste0("https://www.cbr.washington.edu/sacramento/data/php/rpt/mg.php?sc=1&mgconfig=river&outputFormat=csv&hafilter=All&year%5B%5D="
,wy,"&loc%5B%5D=KES&data%5B%5D=ReservoirOutflow&tempUnit=F&startdate=1%2F1&enddate=12%2F31&avgyear=0&consolidate=1&grid=1&y1min=&y1max=&y2min=&y2max=&size=large")
kwk <- read_csv(kwk_url) %>% clean_names() %>%
mutate(gage = 'KWK') %>%
select(3, date = 1, flow = 2) %>%
mutate(date = mdy(paste0(date,'/',wy))) %>%
filter(!is.na(date)) %>%
filter(date <= Sys.Date())
kes <- read_csv(kes_url) %>% clean_names() %>%
mutate(gage = 'KES') %>%
select(3, date = 1, flow = 2) %>%
mutate(date = mdy(paste0(date,'/',wy))) %>%
filter(!is.na(date)) %>%
filter(date <= Sys.Date())
View(kes)
kwk_plot <- ggplot() +
geom_line(data = kes, aes(x = date, y = flow, color = "KES"), linetype = 'dashed', linewidth = 1) +
geom_line(data = kwk, aes(x = date, y = flow, color = "KWK"), alpha = 0.8, linewidth = 1) +
#geom_line(data = kes, aes(x = date, y = flow, color = "KES"), linetype = 'dashed', linewidth = 1) +
scale_color_manual(name = "Site", values = c("KWK" = "steelblue3", "KES" = "grey")) +
#scale_linetype_manual(name = "Site", values = c("KWK" = "solid", "KES" = "dashed")) +
labs(x = 'Date', y = 'Flow (cfs)') +
scale_y_continuous(limits = c(0, max(kes$flow)+1000)) +
theme_bw() +
theme(
legend.position = 'bottom',
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
plot.margin = margin(.25, .25, .25, .25, "cm"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14)
)
kwk_plot
kes_plot <- ggplot() +
geom_line(data = kwk, aes(x = date, y = flow, color = "KWK"), linetype = 'dashed', linewidth = 1) +
geom_line(data = kes, aes(x = date, y = flow, color = "KES"), alpha = 0.8, linewidth = 1) +
#geom_line(data = kwk, aes(x = date, y = flow, color = "KWK"), linetype = 'dashed', linewidth = 1) +
scale_color_manual(name = "Site", values = c("KES" = "steelblue3", "KWK" = "grey")) +
#scale_linetype_manual(name = "Site", values = c("KWK" = "solid", "KES" = "dashed")) +
labs(x = 'Date', y = 'Flow (cfs)') +
scale_y_continuous(limits = c(0, max(kes$flow)+1000)) +
theme_bw() +
theme(
legend.position = 'bottom',
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
plot.margin = margin(.25, .25, .25, .25, "cm"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14)
)
kes_plot
kwk <- read_csv(kwk_url) %>% clean_names() %>%
mutate(gage = 'KWK') %>%
select(3, date = 1, flow = 2) %>%
mutate(date = mdy(paste0(date,'/',wy))) %>%
filter(!is.na(date)) %>%
filter(date <= Sys.Date() &
date >= as.Date('2025-04-01'))
kes <- read_csv(kes_url) %>% clean_names() %>%
mutate(gage = 'KES') %>%
select(3, date = 1, flow = 2) %>%
mutate(date = mdy(paste0(date,'/',wy))) %>%
filter(!is.na(date)) %>%
filter(date <= Sys.Date() &
date >= as.Date('2025-04-01'))
kwk_plot <- ggplot() +
geom_line(data = kes, aes(x = date, y = flow, color = "KES"), linetype = 'dashed', linewidth = 1) +
geom_line(data = kwk, aes(x = date, y = flow, color = "KWK"), alpha = 0.8, linewidth = 1) +
#geom_line(data = kes, aes(x = date, y = flow, color = "KES"), linetype = 'dashed', linewidth = 1) +
scale_color_manual(name = "Site", values = c("KWK" = "steelblue3", "KES" = "grey")) +
#scale_linetype_manual(name = "Site", values = c("KWK" = "solid", "KES" = "dashed")) +
labs(x = 'Date', y = 'Flow (cfs)') +
scale_y_continuous(limits = c(0, max(kes$flow)+1000)) +
theme_bw() +
theme(
legend.position = 'bottom',
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
plot.margin = margin(.25, .25, .25, .25, "cm"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14)
)
kwk_plot
kes_plot <- ggplot() +
geom_line(data = kwk, aes(x = date, y = flow, color = "KWK"), linetype = 'dashed', linewidth = 1) +
geom_line(data = kes, aes(x = date, y = flow, color = "KES"), alpha = 0.8, linewidth = 1) +
#geom_line(data = kwk, aes(x = date, y = flow, color = "KWK"), linetype = 'dashed', linewidth = 1) +
scale_color_manual(name = "Site", values = c("KES" = "steelblue3", "KWK" = "grey")) +
#scale_linetype_manual(name = "Site", values = c("KWK" = "solid", "KES" = "dashed")) +
labs(x = 'Date', y = 'Flow (cfs)') +
scale_y_continuous(limits = c(0, max(kes$flow)+1000)) +
theme_bw() +
theme(
legend.position = 'bottom',
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
plot.margin = margin(.25, .25, .25, .25, "cm"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14)
)
kes_plot
library(leaflet)
library(leafpop)
library(readxl)
library(tidyverse)
library(gridExtra)
library(patchwork)
library(leaflet.extras2)
project <- here::here() #pointing to working directory
files <- list.files(here::here(project, 'input_data/shallow_redds/'), pattern = "\\.xlsx$", full.names = TRUE)
maxFile <- max(files)
redds <- read_excel(maxFile, sheet = 'SacPAS Shallow Redds') %>%
mutate(Run = case_when(grepl('W', Redd_ID) ~ 'Winter',
grepl('F', Redd_ID) ~ 'Fall',
grepl('S', Redd_ID) ~ 'Spring')) %>%
mutate(Latitude = as.numeric(Latitude),
Longitude = as.numeric(Longitude),
measurement_date = ymd(measurement_date))
maxdepth <- max(redds$measurement_depth)
redd_names <- unique(redds$Redd_ID)
redd_list <- list()
min_depth <- if_else(min(redds$measurement_depth) < 0, min(redds$measurement_depth), 0)
for(i in redd_names){
temp <- filter(redds, Redd_ID == i)
redd_list[[i]] <- temp
}
kwk_url <- paste0("https://www.cbr.washington.edu/sacramento/data/php/rpt/mg.php?sc=1&mgconfig=river&outputFormat=csv&hafilter=All&year%5B%5D="
,wy,"&loc%5B%5D=KWK&data%5B%5D=Flow&tempUnit=F&startdate=1%2F1&enddate=12%2F31&avgyear=0&consolidate=1&grid=1&y1min=&y1max=&y2min=&y2max=&size=large")
kes_url <- paste0("https://www.cbr.washington.edu/sacramento/data/php/rpt/mg.php?sc=1&mgconfig=river&outputFormat=csv&hafilter=All&year%5B%5D="
,wy,"&loc%5B%5D=KES&data%5B%5D=ReservoirOutflow&tempUnit=F&startdate=1%2F1&enddate=12%2F31&avgyear=0&consolidate=1&grid=1&y1min=&y1max=&y2min=&y2max=&size=large")
kwk <- read_csv(kwk_url) %>% clean_names() %>%
mutate(gage = 'KWK') %>%
select(3, date = 1, flow = 2) %>%
mutate(date = mdy(paste0(date,'/',wy))) %>%
filter(!is.na(date)) %>%
filter(date <= Sys.Date() &
date >= as.Date('2025-04-01'))
kes <- read_csv(kes_url) %>% clean_names() %>%
mutate(gage = 'KES') %>%
select(3, date = 1, flow = 2) %>%
mutate(date = mdy(paste0(date,'/',wy))) %>%
filter(!is.na(date)) %>%
filter(date <= Sys.Date() &
date >= as.Date('2025-04-01'))
plots <- lapply(redd_list, function(df){
last <- df %>% slice(n())
mid <- median(range(df$measurement_date))
plot <- ggplot(df, aes(x = measurement_date, y = measurement_depth,
fill = measurement_depth)) +
#geom_line(linewidth = 1.5, alpha = 0.5) +
geom_point(size = 5, shape = 21) +
scale_fill_gradientn(
colors = RColorBrewer::brewer.pal(9, "RdYlBu"),
limits = c(min_depth, max(redds$measurement_depth, na.rm = TRUE))
) +
#annotate(geom = 'text', x = mid, y = 5, label = text, fontface = 'bold', size = 4) +
scale_y_reverse(limits = c(maxdepth, 0)) +
geom_area(fill = 'steelblue2', alpha = 0.3) +
labs(y = 'Redd Depth (in)', x = 'Date') +
theme_bw() +
theme(legend.position = 'none',
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
plot.margin = margin(.25, .25, .25, .25, "cm"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14))
table <- df %>%
slice(n()) %>%
select(3,'Most Recent Depth (in)' = 12, 'Date Measured' = 13, 'Emergence Date (estimate)' = 5,18,7)
t_grob <- tableGrob(table,  rows = NULL)
t_plot <- ggplot() +
annotation_custom(t_grob) +
theme_void()
final_plot <- t_plot/plot + plot_layout(heights = c(0.5,1.5))
})
kwk_plot <- ggplot() +
geom_line(data = kes, aes(x = date, y = flow, color = "KES"), linetype = 'dashed', linewidth = 1) +
geom_line(data = kwk, aes(x = date, y = flow, color = "KWK"), alpha = 0.8, linewidth = 1) +
#geom_line(data = kes, aes(x = date, y = flow, color = "KES"), linetype = 'dashed', linewidth = 1) +
scale_color_manual(name = "Site", values = c("KWK" = "steelblue3", "KES" = "grey")) +
#scale_linetype_manual(name = "Site", values = c("KWK" = "solid", "KES" = "dashed")) +
labs(x = 'Date', y = 'Flow (cfs)') +
scale_y_continuous(limits = c(0, max(kes$flow)+1000)) +
theme_bw() +
theme(
legend.position = 'bottom',
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
plot.margin = margin(.25, .25, .25, .25, "cm"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14)
)
kwk_plot
kes_plot <- ggplot() +
geom_line(data = kwk, aes(x = date, y = flow, color = "KWK"), linetype = 'dashed', linewidth = 1) +
geom_line(data = kes, aes(x = date, y = flow, color = "KES"), alpha = 0.8, linewidth = 1) +
#geom_line(data = kwk, aes(x = date, y = flow, color = "KWK"), linetype = 'dashed', linewidth = 1) +
scale_color_manual(name = "Site", values = c("KES" = "steelblue3", "KWK" = "grey")) +
#scale_linetype_manual(name = "Site", values = c("KWK" = "solid", "KES" = "dashed")) +
labs(x = 'Date', y = 'Flow (cfs)') +
scale_y_continuous(limits = c(0, max(kes$flow)+1000)) +
theme_bw() +
theme(
legend.position = 'bottom',
axis.title.y = element_text(margin = margin(r = 8)),
axis.title.x = element_text(margin = margin(t = 8)),
plot.margin = margin(.25, .25, .25, .25, "cm"),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14)
)
kes_plot
plot_flows <- list(kes_plot, kwk_plot)
for_map <- redds %>% group_by(Redd_ID, lat = Latitude, long = Longitude) %>%
slice(n())
plots_ordered <- plots[as.character(for_map$Redd_ID)]
for_map_flows <- data.frame(gauge = c('KES Gage (Keswick Reservoir Outlfow)', 'KWK Gage(Sacramento River below Keswick)'),
Latitude = c(40.612104, 40.600983),
Longitude = c(-122.445699,-122.444458))
pal <- colorNumeric(
palette = "RdYlBu",
domain = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
reverse = FALSE
)
leaf_icons <- awesomeIcons(
icon = 'tint',
iconColor = 'white',
library = 'fa',
markerColor = 'blue'
)
map <- leaflet() %>%
addProviderTiles(providers$CartoDB.Voyager) %>%
addCircleMarkers(data = for_map,
lng = ~Longitude,
lat = ~Latitude,
label = ~paste("Latest Depth (in):", measurement_depth),
fillColor = ~pal(measurement_depth),
color = 'black',
weight = 2,# Optional: border color
fillOpacity = 1,
radius = 5,
popup = popupGraph(plots_ordered, width = 625, height = 425),
popupOptions = popupOptions(
autoPan = TRUE
)) %>%
addAwesomeMarkers(data = for_map_flows,
icon = leaf_icons,
lng = ~Longitude,
lat = ~Latitude,
label = ~gauge,
popup = popupGraph(plot_flows, width = 450, height = 350)) %>%
addLegend(
"bottomright",
pal = pal,
values = c(min_depth, max(for_map$measurement_depth, na.rm = TRUE)),
title = "Water Depth (in)",
opacity = 1
) %>%
addMiniMap(
tiles = providers$CartoDB.Positron,
toggleDisplay = TRUE,
position = "bottomleft",
width = 150,
height = 150,
zoomLevelOffset = -4
)
map
