ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow), size = 3.5,
fo
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
scale_linetype_discrete(guide = "none") +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow), size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
scale_linetype_discrete(guide = "none") +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 200, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
scale_linetype_discrete(guide = "none") +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 300, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
scale_linetype_discrete(guide = "none") +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 250, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
scale_linetype_discrete(guide = "none") +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 275, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 275, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status', linetype = '') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 275, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
ymin <- plyr::round_any(min(redds$dewater_flow), 1000, f = floor)
ymax <- plyr::round_any(max(scens_with_rt_flows[2:3])+400, 500, f = ceiling)
todays_date <- Sys.Date()
mid <- as.Date(paste0(yr,'-08-01')) + floor((todays_date - as.Date(paste0(yr,'-08-01')))/2)
redds_graph <- redds %>% group_by(emergence_date, status, dewater_flow) %>%
summarize(count = n()) %>%
mutate(status = factor(status,
levels = c('OK', 'EMERGED', 'DEWATER'),
labels = c('Re', 'Em', 'De')))
flows <- scens_with_rt_flows %>%
pivot_longer(names_to = 'Alts', values_to = 'Flow', -1) %>%
filter(Date >= max(rt_flows$date))
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status', linetype = '') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 350, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
ymin <- plyr::round_any(min(redds$dewater_flow), 1000, f = floor)
ymax <- plyr::round_any(max(scens_with_rt_flows[2:3])+800, 500, f = ceiling)
todays_date <- Sys.Date()
mid <- as.Date(paste0(yr,'-08-01')) + floor((todays_date - as.Date(paste0(yr,'-08-01')))/2)
redds_graph <- redds %>% group_by(emergence_date, status, dewater_flow) %>%
summarize(count = n()) %>%
mutate(status = factor(status,
levels = c('OK', 'EMERGED', 'DEWATER'),
labels = c('Re', 'Em', 'De')))
flows <- scens_with_rt_flows %>%
pivot_longer(names_to = 'Alts', values_to = 'Flow', -1) %>%
filter(Date >= max(rt_flows$date))
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status', linetype = '') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 350, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
ymin <- plyr::round_any(min(redds$dewater_flow), 1000, f = floor)
ymax <- plyr::round_any(max(scens_with_rt_flows[2:3])+500, 500, f = ceiling)
todays_date <- Sys.Date()
mid <- as.Date(paste0(yr,'-08-01')) + floor((todays_date - as.Date(paste0(yr,'-08-01')))/2)
redds_graph <- redds %>% group_by(emergence_date, status, dewater_flow) %>%
summarize(count = n()) %>%
mutate(status = factor(status,
levels = c('OK', 'EMERGED', 'DEWATER'),
labels = c('Re', 'Em', 'De')))
flows <- scens_with_rt_flows %>%
pivot_longer(names_to = 'Alts', values_to = 'Flow', -1) %>%
filter(Date >= max(rt_flows$date))
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status', linetype = '') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 350, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax+200) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status', linetype = '') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 300, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
ymin <- plyr::round_any(min(redds$dewater_flow), 1000, f = floor)
ymax <- plyr::round_any(max(scens_with_rt_flows[2:3])+400, 500, f = ceiling)
todays_date <- Sys.Date()
mid <- as.Date(paste0(yr,'-08-01')) + floor((todays_date - as.Date(paste0(yr,'-08-01')))/2)
redds_graph <- redds %>% group_by(emergence_date, status, dewater_flow) %>%
summarize(count = n()) %>%
mutate(status = factor(status,
levels = c('OK', 'EMERGED', 'DEWATER'),
labels = c('Re', 'Em', 'De')))
flows <- scens_with_rt_flows %>%
pivot_longer(names_to = 'Alts', values_to = 'Flow', -1) %>%
filter(Date >= max(rt_flows$date))
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax+200) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status', linetype = '') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 300, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
redd_graph <- ggplot() + geom_line(flows, mapping = aes(x = Date, y = Flow, color = Alts), linewidth = 0.75) +
geom_line(rt_flows, mapping = aes(x = date, y = flow, linetype = location), linewidth = 0.75) +
geom_point(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, fill = status),
shape = 21, size = 6, color = 'black',
) +
geom_text(redds_graph, mapping = aes(x = emergence_date, y = dewater_flow, label = count),
color = 'black') +
ylim(ymin, ymax+200) +
xlim(min(as.Date(paste0(yr,'-08-01'))), (max(redds$emergence_date) + 5)) +
labs(x = 'Date', y = 'Flow (cfs)', fill = 'Redd Status', linetype = '') +
theme_bw() +
theme(legend.position = 'bottom',
legend.text = element_text(size = 12),
axis.text = element_text(size = 10),
axis.title = element_text(size = 14),
legend.title = element_text(size = 14),
legend.key.size = unit(0.3, 'cm')) +
scale_fill_manual(values = c(Re = 'lightgrey', Em = 'steelblue3', De = 'darkorange')) +
annotate(geom = 'rect', xmin = as.Date(paste0(yr,'-08-01')), xmax = max(rt_flows$date),
ymin = 3000, ymax = max(rt_flows$flow) + 100, fill = 'darkgrey', color = 'black', alpha = 0.2, linetype = 'dotted') +
annotate(geom = 'text', x = (mid + 0.5), y = max(rt_flows$flow) + 350, size = 3.5,
fontface = 'italic', label = 'Actual Flows')
redd_graph
library(tidyverse)
library(janitor)
library(here)
library(readxl)
project <- here::here() #pointing to working directory
#user defined values
wy <- 2025
exp_fac <- 2.04
yr <- year(Sys.Date())
eosStorage <- 2413
##############################
#Reading in shallow redd files
##############################
#######Read in redd data from shallow winter redd monitoring
redd_files <- list.files(here::here(project, 'input_data/shallow_redds/'), pattern = "\\.xlsx$", full.names = TRUE) #list all excel files
MaxReddFile <- max(redd_files) #reads the latest redd excel file
reddsheet <- tibble(sheet = excel_sheets(MaxReddFile)) %>%
filter(grepl('shallow',sheet,ignore.case = TRUE)) %>%
filter(!grepl('sacpas',sheet,ignore.case = TRUE)) %>%
pull()
redds <- read_excel(MaxReddFile,  sheet = reddsheet, #read in shallow redd file and clean up.
range = cell_cols(c('A:I'))) %>%
na.omit() %>%
select(redd_id = 2, date_established = 3,emergence_date = 4, status = 6, dewater_flow = 9) %>%
mutate_at(2:3, as.Date) %>%#minor cleaning
mutate(dewater_flow = as.numeric(str_extract(dewater_flow, "\\d+\\.*\\d*")))
#######################
#reading in scenarios
#######################
scen_files <- list.files(here::here(project, 'input_data/flow_scen/'), full.names = TRUE, pattern = "xlsx$")
MaxScenFile <- max(scen_files)
flowsheets <- excel_sheets(MaxScenFile)
flowsheet <- grep("Alternatives", flowsheets, ignore.case = TRUE, value = TRUE) #for pulling in flow alternatives
scensheet <- grep("Desired", ignore.case = TRUE, flowsheets, value = TRUE) #for pulling in desired scenarios sheet
scendesc <- grep("Description", ignore.case = TRUE, flowsheets, value = TRUE)
#pull in desired scenarios for filtering
scen_filter <- read_excel(MaxScenFile,
sheet = scensheet, col_names = TRUE) %>%
filter(Use == 'Y') %>%
pull(Scenario)
#pull in flow alternatives
scen_flow_import <- read_excel(MaxScenFile,
sheet = flowsheet, skip = 1, col_names = TRUE) %>%
mutate(Date = as.Date(as.numeric(Date), origin = "1899-12-30")) %>%
pivot_longer(names_to = 'scenarios', values_to = 'flow', -1) %>%
filter(scenarios %in% scen_filter,
!is.na(Date))
#pull in scenario description
scen_descriptions <- read_excel(MaxScenFile,
sheet = scendesc, skip = 6) %>%
separate(1, into = c('Scenario', 'Description'), sep = ':') %>%
filter(Scenario %in% scen_filter)
###########################################
#read in Redd Count data and date from
#most recent file with that info
#different folder than standard redd files
###########################################
count_pattern <- 'To date, unexpanded redd count' #set pattern for count cell to look for
date_pattern <- 'Through' #set pattern for date cell to look for
CountFiles <- list.files(here::here(project,'input_data/shallow_redds/ReddCount/'),
pattern = "xlsx$", full.names = TRUE) #list files with reporting tab in them
MaxCountFile <- max(CountFiles) #single out the most recent file
sheetCount <- tibble(sheet = excel_sheets(MaxCountFile)) %>% #read in most recent excel WITH count data
filter(grepl('REPORTING', sheet, ignore.case = TRUE)) %>%
pull()
#for Count data
Count <- read_excel(MaxCountFile,
sheet = sheetCount) #pull in sheet with count data
reddCountquery <- round(as.numeric(Count[[(which(Count[, 2] == 'To date, unexpanded redd count') + 1), 2]]),0) #isolate count
countDatequery <- as.Date(as.numeric(Count[[(which(Count[, 1] == 'Through') + 1), 1]]),
origin = "1899-12-30")
countDate <- if (countDatequery == as.Date('2025-07-23')) {
format(as.Date('2025-08-07'), "%B %d, %Y")
} else {
format(countDate, "%B %d, %Y")
}
reddCount <- if(reddCountquery == 901) {
1828
} else {
reddCountquery
}
updatedReddInfoDate <- read_excel(MaxReddFile,
sheet = grep('sacpas', excel_sheets(MaxReddFile),
ignore.case = TRUE)) %>%
summarize(max(measurement_date)) %>% pull()
#########################################
#pull in flow data from kwk and kes
#merge real-time flow data with scenarios
#########################################
#kwk <- cdec_query('KWK', '41', 'D', paste0(wy-1,'-08-01'), Sys.Date())
#kes <- cdec_query('KES', '23', 'D', paste0(wy-1,'-08-01'), Sys.Date())
kwk_url <- paste0("https://www.cbr.washington.edu/sacramento/data/php/rpt/mg.php?sc=1&mgconfig=river&outputFormat=csv&hafilter=All&year%5B%5D="
,wy,"&loc%5B%5D=KWK&data%5B%5D=Flow&tempUnit=F&startdate=1%2F1&enddate=12%2F31&avgyear=0&consolidate=1&grid=1&y1min=&y1max=&y2min=&y2max=&size=large")
kes_url <- paste0("https://www.cbr.washington.edu/sacramento/data/php/rpt/mg.php?sc=1&mgconfig=river&outputFormat=csv&hafilter=All&year%5B%5D="
,wy,"&loc%5B%5D=KES&data%5B%5D=ReservoirOutflow&tempUnit=F&startdate=1%2F1&enddate=12%2F31&avgyear=0&consolidate=1&grid=1&y1min=&y1max=&y2min=&y2max=&size=large")
kwk <- read_csv(kwk_url) %>% clean_names() %>% #importing kwk data from SacPAS
mutate(location = 'KWK') %>%
select(date = 1, 3,flow = 2)
kes <- read_csv(kes_url) %>% clean_names() %>% #importing kes data from SacPAS
mutate(location = 'KES') %>%
select(date = 1, 3,flow = 2)
rt_flows <- bind_rows(kwk,kes) %>%
mutate(date = mdy(paste0(date,'/',wy))) %>%
filter(!is.na(date),
!is.na(flow)) %>%
filter(date <= Sys.Date()) %>%
filter(date >= as.Date('2025-08-01'))
kes_flow_bind <- rt_flows %>%
filter(location == 'KES') %>% #filter for only KES data
select(-2) %>%
crossing(scenarios = scen_filter) %>% #expands real-time flow data to all desired scenarios
select(Date = 1,3,2)
scens_with_rt_flows <- scen_flow_import %>%
filter(scen_flow_import, Date > max(kes_flow_bind$date)) %>% #filter out scenario data by max real-time date
bind_rows(kes_flow_bind) %>% #bind realtime flows
pivot_wider(names_from = 'scenarios', values_from = 'flow')
View(scen_flow_import)
scens_with_rt_flows <- scen_flow_import %>%
filter(Date > max(kes_flow_bind$date)) %>% #filter out scenario data by max real-time date
bind_rows(kes_flow_bind) %>% #bind realtime flows
pivot_wider(names_from = 'scenarios', values_from = 'flow')
scens_with_rt_flows <- scen_flow_import %>%
filter(Date > max(kes_flow_bind$date))
kes_flow_bind <- rt_flows %>%
filter(location == 'KES') %>% #filter for only KES data
select(-2) %>%
crossing(scenarios = scen_filter) %>% #expands real-time flow data to all desired scenarios
select(Date = 1,3,2)
scens_with_rt_flows <- scen_flow_import %>%
filter(Date > max(kes_flow_bind$Date))
scens_with_rt_flows <- scen_flow_import %>%
filter(Date > max(kes_flow_bind$Date)) %>% #filter out scenario data by max real-time date
bind_rows(kes_flow_bind) %>% #bind realtime flows
pivot_wider(names_from = 'scenarios', values_from = 'flow')
View(scens_with_rt_flows)
kes_flow_bind <- rt_flows %>%
filter(location == 'KES') %>% #filter for only KES data
select(-2) %>%
crossing(scenarios = scen_filter) %>% #expands real-time flow data to all desired scenarios
select(Date = 1,3,2)
scens_with_rt_flows <- scen_flow_import %>%
filter(Date > max(kes_flow_bind$Date)) %>% #filter out scenario data by max real-time date
bind_rows(kes_flow_bind) %>% #bind realtime flows
pivot_wider(names_from = 'scenarios', values_from = 'flow')
